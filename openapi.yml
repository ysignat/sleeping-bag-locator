openapi: "3.0.3"
info:
  title: Sleeping Bag Locator
  version: "0.1.0"
  license:
    name: MIT
    url: https://opensource.org/license/mit
  contact:
    email: ignatovegors@gmail.com
    name: ysignat

servers:
  - url: http://localhost:8080
    description: Local development

components:
  schemas:
    Error:
      type: string
      example: Something went wrong

    Page:
      type: integer
      minimum: 1
      default: 1
      example: 1

    Limit:
      type: integer
      minimum: 1
      default: 10
      example: 10

    Timestamp:
      type: string
      format: date-time
      example: "2018-03-20T09:12:28"

    ItemId:
      type: string
      format: uuid
      example: d06cd939-f13b-4524-83a6-f025639235e9

    ItemName:
      type: string
      example: Sleeping Bag
      maxLength: 128
      minLength: 1

    ItemLocation:
      type: string
      example: Calgary, AB
      maxLength: 128
      minLength: 1

    Item:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ItemId"
        name:
          $ref: "#/components/schemas/ItemName"
        location:
          $ref: "#/components/schemas/ItemLocation"
        created_at:
          $ref: "#/components/schemas/Timestamp"
        updated_at:
          $ref: "#/components/schemas/Timestamp"

    CreateItemBody:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ItemName"
        location:
          $ref: "#/components/schemas/ItemLocation"

    UpdateItemBody:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ItemName"
        location:
          $ref: "#/components/schemas/ItemLocation"

    ItemsArray:
      type: array
      items:
        $ref: "#/components/schemas/Item"

    UserId:
      type: string
      format: uuid
      example: 0d58e49b-11b0-4991-86d8-9418637e8cd1

    UserName:
      type: string
      example: John Doe
      maxLength: 128
      minLength: 1

    UserAuthType:
      type: string
      enum:
        - github
      example: github
      maxLength: 128
      minLength: 1

    UserExternalId:
      type: string
      example: awesome-github-id
      maxLength: 128
      minLength: 1

    User:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UserId"
        name:
          $ref: "#/components/schemas/UserName"
        auth_type:
          $ref: "#/components/schemas/UserAuthType"
        created_at:
          $ref: "#/components/schemas/Timestamp"
        updated_at:
          $ref: "#/components/schemas/Timestamp"

    CreateUserBody:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/UserName"
        auth_type:
          $ref: "#/components/schemas/UserAuthType"
        external_id:
          $ref: "#/components/schemas/UserExternalId"

    UpdateUserBody:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/UserName"

paths:
  /items:
    get:
      parameters:
        - name: page
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/Page"
        - name: limit
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/Limit"
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ItemsArray"
          headers:
            pagination-page:
              schema:
                $ref: "#/components/schemas/Page"
            pagination-limit:
              schema:
                $ref: "#/components/schemas/Limit"
        "422":
          description: Unprocessable Entity
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Error"
    post:
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/CreateItemBody"
      responses:
        "201":
          description: Created
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Item"
        "422":
          description: Unprocessable Entity
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Error"
  /items/{item_id}:
    get:
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/ItemId"
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Item"
        "404":
          description: Not Found
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Error"
    put:
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/ItemId"
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/UpdateItemBody"
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Item"
        "422":
          description: Unprocessable Entity
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/ItemId"
      responses:
        "204":
          description: Deleted
        "404":
          description: Not Found
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Error"
  /users:
    post:
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/CreateUserBody"
      responses:
        "201":
          description: Created
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/User"
        "422":
          description: Unprocessable Entity
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Error"
  /users/{user_id}:
    get:
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UserId"
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Not Found
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Error"
    put:
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UserId"
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/UpdateUserBody"
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/User"
        "422":
          description: Unprocessable Entity
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UserId"
      responses:
        "204":
          description: Deleted
        "404":
          description: Not Found
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Error"
  /health:
    get:
      responses:
        "200":
          description: OK
