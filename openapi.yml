openapi: "3.0.3"
info:
  title: Sleeping Bag Locator
  version: "0.1.0"
  description: |
    This app was designed to track the location of my belongings

    It was an easy task till I realized, that items could be left thousands of kilometers apart from each other

    Its name refers to the hours spent to find my sleeping bag, that I lent to my friend (and of course forgot whom and when I lent it to)
  license:
    name: MIT
    url: https://opensource.org/license/mit
  contact:
    email: ignatovegors@gmail.com
    name: ysignat

servers:
  - url: http://localhost:8080
    description: Local development

components:
  schemas:
    Page:
      type: integer
      minimum: 1
      default: 1
      example: 1

    Limit:
      type: integer
      minimum: 1
      default: 10
      example: 10

    Timestamp:
      type: string
      format: date-time
      example: "2018-03-20T09:12:28"

    ItemId:
      type: string
      format: uuid
      example: d06cd939-f13b-4524-83a6-f025639235e9

    ItemName:
      type: string
      example: Sleeping Bag
      maxLength: 128

    ItemLocation:
      type: string
      example: Calgary, AB
      maxLength: 128

    Item:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ItemId"
        name:
          $ref: "#/components/schemas/ItemName"
        location:
          $ref: "#/components/schemas/ItemLocation"
        created_at:
          $ref: "#/components/schemas/Timestamp"
        updated_at:
          $ref: "#/components/schemas/Timestamp"

    UpdateItemBody:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ItemName"
        location:
          $ref: "#/components/schemas/ItemLocation"

    ItemsArray:
      type: array
      items:
        $ref: "#/components/schemas/Item"

paths:
  /items:
    get:
      parameters:
        - name: page
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/Page"
        - name: limit
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/Limit"
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ItemsArray"
          headers:
            Pagination-Page:
              schema:
                $ref: "#/components/schemas/Page"
            Pagination-Limit:
              schema:
                $ref: "#/components/schemas/Limit"
    post:
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/UpdateItemBody"
      responses:
        "201":
          description: Created
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Item"
  /items/{item_id}:
    get:
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/ItemId"
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Item"
    put:
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/ItemId"
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Item"
    delete:
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/ItemId"
      responses:
        "204":
          description: Deleted
